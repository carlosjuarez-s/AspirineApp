{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\Global Learning\\\\Proyecto Final\\\\aspirineapp\\\\src\\\\components\\\\Pages\\\\RecordShift\\\\RecordShift.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport Stack from '@mui/material/Stack';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport './RecordShift.css';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shiftURL = 'http://localhost:8080/api/shift';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Facundo', 'Lorenzo', '15:30', '12/03/2022'), createData('carlos', 'Luciano', '15:30', '12/03/2022'), createData('Nahuel', 'Santiago', '15:30', '12/03/2022'), createData('Emiliano', 'Tomas', '15:30', '12/03/2022'), createData('Agustin', 'Lorenzo', '15:30', '12/03/2022')];\n\nconst RecordShift = () => {\n  _s();\n\n  const [value, setValue] = React.useState(new Date());\n  const [age, setAge] = React.useState('');\n  const [shift, setShift] = React.useState([]);\n\n  const handleChange = event => {\n    setAge(event.target.value);\n  };\n\n  const getShift = async () => {\n    await axios.get(shiftURL).then(resp => {\n      setShift(resp.data);\n    }).catch(e => {\n      console.log(e.response.data);\n    });\n  };\n\n  getShift();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"a\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this)\n  /*<div>\r\n    <div className='Calendar'>\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <Stack spacing={3}>\r\n         <DatePicker\r\n          views={['day']}\r\n          label=\"Just date\"\r\n          value={value}\r\n         onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n          renderInput={(params) => <TextField {...params} helperText={null} />}\r\n        />\r\n        </Stack>\r\n      </LocalizationProvider>\r\n    </div>\r\n    \r\n    <div className='Table'>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Names</TableCell>\r\n              <TableCell align=\"right\">Doctor</TableCell>\r\n              <TableCell align=\"right\">Horario</TableCell>\r\n              <TableCell align=\"right\">Fecha</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        <TableBody>\r\n          {shift.map((element) => (\r\n          <TableRow\r\n            key={element.name}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">{element.firstName}</TableCell>\r\n            <TableCell align=\"right\">{element.doctor}</TableCell>\r\n            <TableCell align=\"right\">{element.hour}</TableCell>\r\n            <TableCell align=\"right\">{element.date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n      <div className='newTurn'>\r\n    <TextField\r\n      id=\"time\"\r\n      label=\"Elegir horario\"\r\n      type=\"time\"\r\n      defaultValue=\"12:00\"\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      inputProps={{\r\n        step: 1800, // 5 min\r\n      }}\r\n      sx={{left: 22, width: 130 , mt:3 }}\r\n    />\r\n    <FormControl variant=\"standard\" sx={{ m: 3, minWidth: 130 }}>\r\n      <InputLabel id=\"demo-simple-select-standard-label\">MÃ©dico</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-standard-label\"\r\n        id=\"demo-simple-select-standard\"\r\n        value={age}\r\n        onChange={handleChange}\r\n        label=\"Age\"\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        <MenuItem value={10}>Ten</MenuItem>\r\n        <MenuItem value={20}>Twenty</MenuItem>\r\n        <MenuItem value={30}>Thirty</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n      <div>\r\n        <Stack  direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={2}> \r\n          <Button variant=\"contained\">Generar turno</Button>\r\n        </Stack>\r\n      </div>\r\n    </div>\r\n  </div> */\n  ;\n};\n\n_s(RecordShift, \"+xg8enH/Pp3+rFdFe5FWm/TKmtQ=\");\n\n_c = RecordShift;\nexport default RecordShift;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordShift\");","map":{"version":3,"sources":["D:/Cursos/Global Learning/Proyecto Final/aspirineapp/src/components/Pages/RecordShift/RecordShift.js"],"names":["React","TextField","AdapterDateFns","LocalizationProvider","DatePicker","Stack","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","InputLabel","MenuItem","FormControl","Select","Button","axios","useState","shiftURL","createData","name","calories","fat","carbs","protein","rows","RecordShift","value","setValue","Date","age","setAge","shift","setShift","handleChange","event","target","getShift","get","then","resp","data","catch","e","console","log","response"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAG,iCAAjB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyD;AACvD,SAAO;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,GAAlB;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXN,UAAU,CAAC,SAAD,EAAY,SAAZ,EAAsB,OAAtB,EAA+B,YAA/B,CADC,EAEXA,UAAU,CAAC,QAAD,EAAW,SAAX,EAAqB,OAArB,EAA8B,YAA9B,CAFC,EAGXA,UAAU,CAAC,QAAD,EAAW,UAAX,EAAsB,OAAtB,EAA+B,YAA/B,CAHC,EAIXA,UAAU,CAAC,UAAD,EAAa,OAAb,EAAqB,OAArB,EAA8B,YAA9B,CAJC,EAKXA,UAAU,CAAC,SAAD,EAAY,SAAZ,EAAsB,OAAtB,EAA+B,YAA/B,CALC,CAAb;;AAQA,MAAMO,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAACmB,QAAN,CAAe,IAAIY,IAAJ,EAAf,CAA1B;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjC,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAtB;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBnC,KAAK,CAACmB,QAAN,CAAe,EAAf,CAA1B;;AAEA,QAAMiB,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,MAAM,CAACI,KAAK,CAACC,MAAN,CAAaT,KAAd,CAAN;AACD,GAFD;;AAIA,QAAMU,QAAQ,GAAG,YAAY;AAC3B,UAAMrB,KAAK,CAACsB,GAAN,CAAUpB,QAAV,EACLqB,IADK,CACAC,IAAI,IAAI;AACZP,MAAAA,QAAQ,CAACO,IAAI,CAACC,IAAN,CAAR;AACD,KAHK,EAGHC,KAHG,CAGGC,CAAC,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,QAAF,CAAWL,IAAvB;AACD,KALK,CAAN;AAMD,GAPD;;AASAJ,EAAAA,QAAQ;AAER,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnFE;AAuFD,CA3GD;;GAAMX,W;;KAAAA,W;AA6GN,eAAeA,WAAf","sourcesContent":["import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport './RecordShift.css'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nconst shiftURL = 'http://localhost:8080/api/shift';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Facundo', 'Lorenzo','15:30', '12/03/2022'),\r\n  createData('carlos', 'Luciano','15:30', '12/03/2022'),\r\n  createData('Nahuel', 'Santiago','15:30', '12/03/2022'),\r\n  createData('Emiliano', 'Tomas','15:30', '12/03/2022'),\r\n  createData('Agustin', 'Lorenzo','15:30', '12/03/2022'),\r\n];\r\n\r\nconst RecordShift = () => {\r\n  const [value, setValue] = React.useState(new Date());\r\n  const [age, setAge] = React.useState('');\r\n  const [shift, setShift] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  }\r\n\r\n  const getShift = async () => {\r\n    await axios.get(shiftURL)\r\n    .then(resp => {\r\n      setShift(resp.data);\r\n    }).catch(e => {\r\n      console.log(e.response.data)\r\n    })\r\n  }\r\n\r\n  getShift();\r\n\r\n  return (\r\n    <div>a</div>\r\n    /*<div>\r\n      <div className='Calendar'>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <Stack spacing={3}>\r\n           <DatePicker\r\n            views={['day']}\r\n            label=\"Just date\"\r\n            value={value}\r\n           onChange={(newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n            renderInput={(params) => <TextField {...params} helperText={null} />}\r\n          />\r\n          </Stack>\r\n        </LocalizationProvider>\r\n      </div>\r\n      \r\n      <div className='Table'>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Names</TableCell>\r\n                <TableCell align=\"right\">Doctor</TableCell>\r\n                <TableCell align=\"right\">Horario</TableCell>\r\n                <TableCell align=\"right\">Fecha</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          <TableBody>\r\n            {shift.map((element) => (\r\n            <TableRow\r\n              key={element.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">{element.firstName}</TableCell>\r\n              <TableCell align=\"right\">{element.doctor}</TableCell>\r\n              <TableCell align=\"right\">{element.hour}</TableCell>\r\n              <TableCell align=\"right\">{element.date}</TableCell>\r\n\r\n            </TableRow>\r\n            ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n\r\n      <div className='newTurn'>\r\n      <TextField\r\n        id=\"time\"\r\n        label=\"Elegir horario\"\r\n        type=\"time\"\r\n        defaultValue=\"12:00\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 1800, // 5 min\r\n        }}\r\n        sx={{left: 22, width: 130 , mt:3 }}\r\n      />\r\n      <FormControl variant=\"standard\" sx={{ m: 3, minWidth: 130 }}>\r\n        <InputLabel id=\"demo-simple-select-standard-label\">MÃ©dico</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          id=\"demo-simple-select-standard\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          label=\"Age\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n        <div>\r\n          <Stack  direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={2}> \r\n            <Button variant=\"contained\">Generar turno</Button>\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n    </div> */\r\n  )   \r\n}\r\n\r\nexport default RecordShift"]},"metadata":{},"sourceType":"module"}