{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\Global Learning\\\\Proyecto Final\\\\aspirineapp\\\\src\\\\components\\\\Pages\\\\RecordShift\\\\RecordShift.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport Stack from '@mui/material/Stack';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport './RecordShift.css';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport token from '../../Security/token';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shiftURL = 'http://localhost:8080/api/shift';\n\nconst RecordShift = props => {\n  _s();\n\n  const [value, setValue] = useState(new Date());\n  const [doctorName, setDoctorName] = useState('');\n  const [shift, setShift] = useState([]);\n  const [doctor, setDoctor] = useState([]);\n  const [hour, setHour] = useState('');\n  useEffect(() => {\n    getDoctor();\n  }, []);\n\n  const handleChange = event => {\n    setDoctorName(event.target.value);\n  };\n\n  const getShift = async () => {\n    await axios.get(shiftURL).then(response => {\n      setShift(response.data);\n      console.log(response.data);\n    });\n    console.log(shift);\n  };\n\n  useEffect(() => {\n    getShift();\n  }, []);\n\n  const fullDate = value => {\n    let formatDate = value.getDate() + \"/\" + (value.getMonth() + 1) + \"/\" + value.getFullYear();\n    return formatDate;\n  };\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    const doctorSelected = doctor.filter(element => element.firstName === doctorName);\n    console.log(doctorSelected);\n    const token = JSON.parse(sessionStorage.getItem(\"token\"));\n    console.log(token);\n    let patientName = token.token;\n    await axios.post(shiftURL, {\n      doctor: doctorSelected,\n      hour: hour,\n      date: fullDate(value),\n      taken: false,\n      patient: token.token\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Calendar\",\n      children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            views: ['day'],\n            label: \"Date\",\n            value: value,\n            onChange: e => {\n              setValue(e);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              helperText: null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Table\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Taken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: shift.map(element => /*#__PURE__*/_jsxDEV(TableRow, {\n              sx: {\n                '&:last-child td, &:last-child th': {\n                  border: 0\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: element.doctor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: element.hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: element.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: element.taken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 15\n              }, this)]\n            }, element.doctor, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newTurn\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: hour,\n        onChange: e => setHour(e.target.value),\n        id: \"time\",\n        label: \"Choose Schedule\",\n        type: \"time\",\n        defaultValue: \"12:00\",\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          step: 1800 // 5 min\n\n        },\n        sx: {\n          left: 22,\n          width: 130,\n          mt: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"standard\",\n        sx: {\n          m: 3,\n          minWidth: 130\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-standard-label\",\n          children: \"Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-standard-label\",\n          id: \"demo-simple-select-standard\",\n          value: doctorName,\n          onChange: handleChange,\n          label: \"Age\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), doctor.map(doctor => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: doctor.firstName,\n            children: doctor.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleOnSubmit,\n            children: \"Generate Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecordShift, \"T9qz/So1RH2Uqw8dBUsa9m1nGcM=\");\n\n_c = RecordShift;\nexport default RecordShift;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordShift\");","map":{"version":3,"sources":["D:/Cursos/Global Learning/Proyecto Final/aspirineapp/src/components/Pages/RecordShift/RecordShift.js"],"names":["React","TextField","AdapterDateFns","LocalizationProvider","DatePicker","Stack","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","InputLabel","MenuItem","FormControl","Select","Button","axios","useState","useEffect","token","shiftURL","RecordShift","props","value","setValue","Date","doctorName","setDoctorName","shift","setShift","doctor","setDoctor","hour","setHour","getDoctor","handleChange","event","target","getShift","get","then","response","data","console","log","fullDate","formatDate","getDate","getMonth","getFullYear","handleOnSubmit","preventDefault","doctorSelected","filter","element","firstName","JSON","parse","sessionStorage","getItem","patientName","post","date","taken","patient","e","params","minWidth","map","border","shrink","step","left","width","mt","m"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport './RecordShift.css'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport token from '../../Security/token';\r\n\r\n\r\nconst shiftURL = 'http://localhost:8080/api/shift';\r\n\r\n\r\nconst RecordShift = (props) => {\r\n  const [value, setValue] = useState(new Date());\r\n  const [doctorName, setDoctorName] = useState('');\r\n  const [shift, setShift] = useState([]);\r\n  const [doctor, setDoctor] = useState([]);\r\n  const [hour, setHour] = useState('');\r\n  \r\n\r\n \r\n  useEffect(() => {\r\n    getDoctor()\r\n  }, [])\r\n\r\n  \r\n  const handleChange = (event) => {\r\n    setDoctorName(event.target.value);\r\n  }\r\n\r\n  const getShift = async () => {\r\n    await axios.get(shiftURL)\r\n    .then(response => {\r\n    setShift(response.data)\r\n    console.log(response.data)\r\n    })\r\n    console.log(shift)\r\n    }\r\n  \r\n    useEffect(() => {\r\n      getShift();\r\n    }, [])\r\n\r\n  const fullDate=(value)=>{\r\n    let formatDate= value.getDate()+\"/\"+(value.getMonth()+1)+\"/\"+ value.getFullYear()\r\n    return formatDate;\r\n\r\n  }\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const doctorSelected = doctor.filter(element => element.firstName === doctorName);\r\n    console.log(doctorSelected);\r\n    const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n    console.log(token)\r\n    let patientName = token.token\r\n    \r\n    await axios.post(shiftURL,{\r\n      doctor: doctorSelected,\r\n      hour: hour,\r\n      date: fullDate(value),\r\n      taken: false,\r\n      patient: token.token\r\n      })\r\n  }\r\n\r\n  return ( \r\n    <div>\r\n      <div className='Calendar'>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <Stack spacing={3}>\r\n           <DatePicker\r\n            views={['day']}\r\n            label=\"Date\"\r\n            value={value}\r\n           onChange={(e) => {\r\n            setValue(e);\r\n          }}\r\n            renderInput={(params) => <TextField {...params} helperText={null} />}\r\n          />\r\n          </Stack>\r\n        </LocalizationProvider>\r\n      </div>\r\n      \r\n      <div className='Table'>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Doctor</TableCell>\r\n                <TableCell align=\"right\">Hour</TableCell>\r\n                <TableCell align=\"right\">Date</TableCell>\r\n                <TableCell align=\"right\">Taken</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          <TableBody>\r\n            {shift.map((element) => (\r\n            <TableRow\r\n              key={element.doctor}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell align=\"left\">{element.doctor}</TableCell>\r\n              <TableCell align=\"right\">{element.hour}</TableCell>\r\n              <TableCell align=\"right\">{element.data}</TableCell>\r\n              <TableCell align=\"right\">{element.taken}</TableCell>\r\n            </TableRow>\r\n            ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n\r\n      <div className='newTurn'>\r\n      <TextField\r\n        value={hour}\r\n        onChange={e => setHour(e.target.value)}\r\n        id=\"time\"\r\n        label=\"Choose Schedule\"\r\n        type=\"time\"\r\n        defaultValue=\"12:00\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 1800, // 5 min\r\n        }}\r\n        sx={{left: 22, width: 130 , mt:3 }}\r\n      />\r\n      <FormControl variant=\"standard\" sx={{ m: 3, minWidth: 130 }}>\r\n        <InputLabel id=\"demo-simple-select-standard-label\">Doctor</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          id=\"demo-simple-select-standard\"\r\n          value={doctorName}\r\n          onChange={handleChange}\r\n          label=\"Age\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {doctor.map(doctor => <MenuItem value={doctor.firstName}>{doctor.firstName}</MenuItem>)}\r\n  \r\n        </Select>\r\n      </FormControl>\r\n        <div>\r\n          <Stack  direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={2}> \r\n            <Button variant=\"contained\" onClick={handleOnSubmit}>Generate Shift</Button>\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )   \r\n}\r\n\r\nexport default RecordShift"]},"metadata":{},"sourceType":"module"}